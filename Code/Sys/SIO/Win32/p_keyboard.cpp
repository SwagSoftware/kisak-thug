/*****************************************************************************
**																			**
**			              Neversoft Entertainment			                **
**																		   	**
**				   Copyright (C) 1999 - All Rights Reserved				   	**
**																			**
******************************************************************************
**																			**
**	Project:		SYS Library												**
**																			**
**	Module:			SYS (SYS_) 												**
**																			**
**	File name:		keyboard.cpp											**
**																			**
**	Created:		03/08/2001	-	gj										**
**																			**
**	Description:	USB Keyboard interface									**
**																			**
*****************************************************************************/


/*****************************************************************************
**							  	  Includes									**
*****************************************************************************/

#include <core/defines.h>
#include <sys/sio/keyboard.h>
#include <SDL.h>
#undef main // nice sdl shit
#include <SDL_keyboard.h>

/*****************************************************************************
**								DBG Information								**
*****************************************************************************/

namespace SIO
{

/*****************************************************************************
**								  Externals									**
*****************************************************************************/


/*****************************************************************************
**								Private Types								**
*****************************************************************************/


/*****************************************************************************
**								 Private Data								**
*****************************************************************************/


/*****************************************************************************
**								 Public Data								**
*****************************************************************************/


/*****************************************************************************
**							  Private Prototypes							**
*****************************************************************************/


/*****************************************************************************
**							   Private Functions							**
*****************************************************************************/


/*****************************************************************************
**							   Public Functions								**
*****************************************************************************/

/******************************************************************/
/*                                                                */
/*                                                                */
/******************************************************************/

int KeyboardInit(void)
{
	return 0;
}

/******************************************************************/
/*                                                                */
/*                                                                */
/******************************************************************/

int KeyboardDeinit(void)
{
	return 0;
}

/******************************************************************/
/*                                                                */
/*                                                                */
/******************************************************************/

int KeyboardRead( char* makes )
{
	// blackops: not sure why i couldn't get SDL keyboard input working so we doin this
	int total_pressed = 0;
	for (int i = 0; i < 256; i++)
	{
		if (g_charsPressed[i]) 
		{
			makes[total_pressed] = (char)i;
			total_pressed++;
		}
	}

	return total_pressed;
}

int KeyboardReadText(char* makes)
{
	//int num_chars = 0;
	//SDL_StartTextInput();
	//SDL_Event e;
	//while (SDL_PollEvent(&e))
	//{
	//	switch (e.type)
	//	{
	//	case SDL_TEXTINPUT:
	//		strcat(makes, e.text.text);
	//		num_chars++;
	//		printf(e.text.text);
	//		break;
	//	}
	//}

	//SDL_StopTextInput();
	//return num_chars;
	return 0;
}

/******************************************************************/
/*                                                                */
/*                                                                */
/******************************************************************/


void KeyboardClear( void )
{
}


/******************************************************************/
/*                                                                */
/*                                                                */
/******************************************************************/

} // namespace SIO
